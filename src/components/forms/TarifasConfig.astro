<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Configuraci칩n de Tarifas</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100">
    <div class="bg-white rounded-lg">
        <div class="p-6">
            
            
            <!-- Loading indicator -->
            <div id="loadingIndicator" class="hidden mb-4 p-3 bg-blue-50 rounded-lg">
                <div class="flex items-center gap-2">
                    <div class="animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600"></div>
                    <span class="text-blue-600">Cargando tarifas...</span>
                </div>
            </div>

            <!-- Error message -->
            <div id="errorMessage" class="hidden mb-4 p-3 bg-red-50 border border-red-200 rounded-lg">
                <div class="flex items-center gap-2">
                    <svg class="h-4 w-4 text-red-600" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
                    </svg>
                    <span class="text-red-700" id="errorText"></span>
                </div>
            </div>

            <!-- Success message -->
            <div id="successMessage" class="hidden mb-4 p-3 bg-green-50 border border-green-200 rounded-lg">
                <div class="flex items-center gap-2">
                    <svg class="h-4 w-4 text-green-600" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                    </svg>
                    <span class="text-green-700">Tarifas guardadas exitosamente</span>
                </div>
            </div>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                <!-- Tarifas para Carros -->
                <div class="p-4 border rounded-lg">
                    <div class="flex items-center gap-2 mb-3">
                        <svg class="text-blue-600" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                            <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 11h2a2 2 0 0 1 2 2v2a1 1 0 0 1-1 1h-1.5M17 11h-6.5m6.5 0l-2.417-4.029A2 2 0 0 0 12.868 6H10.5m0 0v5m0-5H7.64a2 2 0 0 0-1.962 1.608L5 11m5.5 0H5m.5 5H4a1 1 0 0 1-1-1v-2a2 2 0 0 1 2-2v0m.5 5a2 2 0 1 0 4 0m-4 0a2 2 0 1 1 4 0m0 0h5m0 0a2 2 0 1 0 4 0m-4 0a2 2 0 1 1 4 0"/>
                        </svg>
                        <h3 class="font-semibold text-blue-600">Tarifas para Autom칩viles</h3>
                    </div>

                    <div class="space-y-3">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-3">Precio por Hora</label>
                            <div class="flex items-center gap-2">
                                <span class="text-sm text-gray-500">$</span>
                                <input 
                                    type="number" 
                                    id="carroPorHora"
                                    placeholder="5000"
                                    class="flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                />
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Tarifas para Motos -->
                <div class="p-4 border rounded-lg">
                    <div class="flex items-center gap-2 mb-3">
                        <svg class="text-green-600" xmlns="http://www.w3.org/2000/svg" width="22" height="20" viewBox="0 0 640 512">
                            <path fill="currentColor" d="M280 32c-13.3 0-24 10.7-24 24s10.7 24 24 24h57.7l16.4 30.3L256 192l-45.3-45.3c-12-12-28.3-18.7-45.3-18.7H64c-17.7 0-32 14.3-32 32v32h96c88.4 0 160 71.6 160 160c0 11-1.1 21.7-3.2 32h70.4c-2.1-10.3-3.2-21-3.2-32c0-52.2 25-98.6 63.7-127.8l15.4 28.6C402.4 276.3 384 312 384 352c0 70.7 57.3 128 128 128s128-57.3 128-128s-57.3-128-128-128c-13.5 0-26.5 2.1-38.7 6l-55.1-102H480c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32h-20.4c-7.5 0-14.7 2.6-20.5 7.4l-47.4 39.5l-14-26c-7-12.9-20.5-21-35.2-21zm182.7 279.2l28.2 52.2c6.3 11.7 20.9 16 32.5 9.7s16-20.9 9.7-32.5l-28.2-52.2c2.3-.3 4.7-.4 7.1-.4c35.3 0 64 28.7 64 64s-28.7 64-64 64s-64-28.7-64-64c0-15.5 5.5-29.7 14.7-40.8M187.3 376c-9.5 23.5-32.5 40-59.3 40c-35.3 0-64-28.7-64-64s28.7-64 64-64c26.9 0 49.9 16.5 59.3 40h66.4c-11.2-59.2-63.2-104-125.7-104C57.3 224 0 281.3 0 352s57.3 128 128 128c62.5 0 114.5-44.8 125.8-104h-66.4zm-59.3 8a32 32 0 1 0 0-64a32 32 0 1 0 0 64"/>
                        </svg>
                        <h3 class="font-semibold text-green-600">Tarifas para Motocicletas</h3>
                    </div>

                    <div class="space-y-3">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-3">Precio por Hora</label>
                            <div class="flex items-center gap-2">
                                <span class="text-sm text-gray-500">$</span>
                                <input 
                                    type="number" 
                                    id="motoPorHora"
                                    placeholder="2000"
                                    class="flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500"
                                />
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Botones de acci칩n -->
            <div class="flex justify-between items-center pt-4 border-t">
                <div class="text-sm text-gray-600">
                    <p>Las tarifas se aplicar치n a todos los nuevos registros</p>
                </div>
                <div class="flex gap-2">
                    <button 
                        id="saveBtn"
                        class="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 flex items-center gap-2 disabled:opacity-50"
                    >
                        <svg class="h-4 w-4" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                        </svg>
                        <span id="saveButtonText">Guardar Tarifas</span>
                    </button>
                </div>
            </div>

            <!-- Vista previa de tarifas actuales -->
            <div id="tarifasPreview" class="mt-4 p-3 bg-gray-50 rounded-lg">
                <h4 class="font-medium mb-2">Tarifas Actuales:</h4>
                <div class="grid grid-cols-2 gap-4 text-sm">
                    <div>
                        <span class="font-medium text-blue-600">Carros:</span>
                        <p id="carroPreview">Cargando...</p>
                    </div>
                    <div>
                        <span class="font-medium text-green-600">Motos:</span>
                        <p id="motoPreview">Cargando...</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // API Base URL
            const API_BASE_URL = 'https://xpz21v8w-8000.use2.devtunnels.ms/api/tarifas';
            
            // Elements
            const carroPorHora = document.getElementById('carroPorHora');
            const motoPorHora = document.getElementById('motoPorHora');
            const saveBtn = document.getElementById('saveBtn');
            const carroPreview = document.getElementById('carroPreview');
            const motoPreview = document.getElementById('motoPreview');
            const loadingIndicator = document.getElementById('loadingIndicator');
            const errorMessage = document.getElementById('errorMessage');
            const errorText = document.getElementById('errorText');
            const successMessage = document.getElementById('successMessage');
            const saveButtonText = document.getElementById('saveButtonText');

            // Tarifas por defecto
            const defaultTarifas = {
                carro: { porHora: 5000 },
                moto: { porHora: 2000}
            };

            // Utility functions
            function showLoading() {
                loadingIndicator.classList.remove('hidden');
                hideMessages();
            }

            function hideLoading() {
                loadingIndicator.classList.add('hidden');
            }

            function showError(message) {
                errorText.textContent = message;
                errorMessage.classList.remove('hidden');
                hideLoading();
                setTimeout(() => {
                    errorMessage.classList.add('hidden');
                }, 5000);
            }

            function showSuccess() {
                successMessage.classList.remove('hidden');
                hideLoading();
                setTimeout(() => {
                    successMessage.classList.add('hidden');
                }, 3000);
            }

            function hideMessages() {
                errorMessage.classList.add('hidden');
                successMessage.classList.add('hidden');
            }

            function disableButtons() {
                saveBtn.disabled = true;
                saveBtn.classList.add('opacity-50');
            }

            function enableButtons() {
                saveBtn.disabled = false;
                saveBtn.classList.remove('opacity-50');
            }

            // Formatear moneda
            function formatCurrency(amount) {
                return new Intl.NumberFormat('es-CO', {
                    style: 'currency',
                    currency: 'COP',
                    minimumFractionDigits: 0
                }).format(amount);
            }

            // API functions
            async function fetchTarifas(tipo) {
                try {
                    const response = await fetch(`${API_BASE_URL}/${tipo}/`);
                    if (!response.ok) {
                        throw new Error(`Error ${response.status}: ${response.statusText}`);
                    }
                    const data = await response.json();
                    return data;
                } catch (error) {
                    throw new Error(`Error al obtener tarifas de ${tipo}: ${error.message}`);
                }
            }

            async function saveTarifasAPI(tipo, tarifas) {
                try {
                    const response = await fetch(`${API_BASE_URL}/${tipo}/`, {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(tarifas)
                    });
                    
                    if (!response.ok) {
                        const errorData = await response.json().catch(() => null);
                        throw new Error(errorData?.detail || `Error ${response.status}: ${response.statusText}`);
                    }
                    
                    return await response.json();
                } catch (error) {
                    throw new Error(`Error al guardar tarifas de ${tipo}: ${error.message}`);
                }
            }

            // Cargar tarifas desde la API
            async function loadTarifas() {
                showLoading();
                disableButtons();
                
                try {
                    // Cargar tarifas de carros
                    const carroTarifas = await fetchTarifas('carro');
                    if (carroTarifas && carroTarifas.length > 0) {
                        const carro = carroTarifas[0]; // Asumiendo que solo hay una tarifa activa
                        carroPorHora.value = carro.precio_hora || defaultTarifas.carro.porHora;
                    } else {
                        // Usar valores por defecto si no hay tarifas
                        carroPorHora.value = defaultTarifas.carro.porHora;
                    }

                    // Cargar tarifas de motos
                    const motoTarifas = await fetchTarifas('moto');
                    if (motoTarifas && motoTarifas.length > 0) {
                        const moto = motoTarifas[0]; // Asumiendo que solo hay una tarifa activa
                        motoPorHora.value = moto.precio_hora || defaultTarifas.moto.porHora;
                    } else {
                        // Usar valores por defecto si no hay tarifas
                        motoPorHora.value = defaultTarifas.moto.porHora;
                    }

                    updatePreview();
                    hideLoading();
                    enableButtons();
                } catch (error) {
                    showError(error.message);
                    // Cargar valores por defecto en caso de error
                    carroPorHora.value = defaultTarifas.carro.porHora;
                    motoPorHora.value = defaultTarifas.moto.porHora;
                    updatePreview();
                    enableButtons();
                }
            }

            // Actualizar vista previa
            function updatePreview() {
                const carroHora = parseInt(carroPorHora.value) || 0;
                const motoHora = parseInt(motoPorHora.value) || 0;
                carroPreview.textContent = `${formatCurrency(carroHora)}/hora`;
                motoPreview.textContent = `${formatCurrency(motoHora)}/hora`;
            }

            // Guardar tarifas
            async function saveTarifas() {
                showLoading();
                disableButtons();
                saveButtonText.textContent = 'Guardando...';
                
                try {
                    // Preparar datos para carros
                    const carroData = {
                        precio_hora: parseInt(carroPorHora.value) || 0,
                        activo: true
                    };

                    // Preparar datos para motos
                    const motoData = {
                        precio_hora: parseInt(motoPorHora.value) || 0,
                        activo: true
                    };

                    // Guardar tarifas de carros
                    await saveTarifasAPI('carro', carroData);
                    
                    // Guardar tarifas de motos
                    await saveTarifasAPI('moto', motoData);

                    updatePreview();
                    showSuccess();
                    enableButtons();
                    saveButtonText.textContent = 'Guardar Tarifas';
                } catch (error) {
                    showError(error.message);
                    enableButtons();
                    saveButtonText.textContent = 'Guardar Tarifas';
                }
            }

            // Event listeners
            carroPorHora.addEventListener('input', updatePreview);
            motoPorHora.addEventListener('input', updatePreview);
            saveBtn.addEventListener('click', saveTarifas);

            // Cargar tarifas al iniciar
            loadTarifas();
        });
    </script>
</body>
</html>