---
---

<div class="bg-white ">
  <div class="p-6">
    <div class="flex items-center gap-2 mb-2">
      <!-- <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.196-2.121M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.196-2.121M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
      </svg> -->
      <h1 class="text-2xl md:text-3xl font-bold text-gray-900 mb-2">Gesti√≥n de Abonados</h1>
    </div>

    

    <!-- border-t -->
    <!-- Estad√≠sticas de abonados -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 pt-4  mb-5">
      <div class="text-center">
        <div id="abonadosCarros" class="text-2xl font-bold text-blue-600">0</div>
        <div class="text-sm text-gray-600">Carros Abonados</div>
      </div>
      <div class="text-center">
        <div id="abonadosMotos" class="text-2xl font-bold text-purple-600">0</div>
        <div class="text-sm text-gray-600">Motos Abonadas</div>
      </div>
      <div class="text-center">
        <div id="ingresosMensuales" class="text-2xl font-bold text-green-600">$0</div>
        <div class="text-sm text-gray-600">Ingresos Mensuales</div>
      </div>
    </div>

    <!-- Formulario para nuevo abonado -->
    <div class="bg-blue-50 p-4 rounded-lg mb-6">
      <h3 class="font-medium text-blue-800 mb-3">Registrar Nuevo Abonado</h3>
      <div class="grid grid-cols-1 md:grid-cols-4 gap-3">
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Placa</label>
          <input 
            type="text" 
            id="abonadoPlaca"
            placeholder="ABC-123" 
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
          />
        </div>
        
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Tipo</label>
          <select 
            id="abonadoTipo"
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
          >
            <option value="">Seleccionar</option>
            <option value="carro">üöó Carro</option>
            <option value="moto">üèçÔ∏è Moto</option>
          </select>
        </div>
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Propietario</label>
          <input 
            type="text" 
            id="abonadoNombre"
            placeholder="Nombre completo" 
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
          />
        </div>
        <div class="flex items-end">
          <button 
            id="addAbonadoBtn"
            class="w-full px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:bg-gray-400"
            disabled
          >
            Agregar Abonado
          </button>
        </div>
      </div>
    </div>
    

    <!-- Lista de abonados activos -->
    <div class="mb-6">
      <div class="flex justify-between items-center mb-3">
        <h3 class="font-medium text-gray-800">Abonados Activos</h3>
        <span id="abonadosCount" class="text-sm text-gray-500">0 abonados</span>
      </div>
      <div id="abonadosList" class="space-y-2 max-h-60 overflow-y-auto">
        <!-- Lista se llena din√°micamente -->
      </div>
    </div>

  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const abonadoPlaca = document.getElementById('abonadoPlaca');
    const abonadoTipo = document.getElementById('abonadoTipo');
    const abonadoNombre = document.getElementById('abonadoNombre');
    const addAbonadoBtn = document.getElementById('addAbonadoBtn');
    const abonadosList = document.getElementById('abonadosList');
    const abonadosCount = document.getElementById('abonadosCount');
    const abonadosCarros = document.getElementById('abonadosCarros');
    const abonadosMotos = document.getElementById('abonadosMotos');
    const ingresosMensuales = document.getElementById('ingresosMensuales');

    // Obtener abonados del localStorage
    function getAbonados() {
      return JSON.parse(localStorage.getItem('parkingAbonados') || '[]');
    }

    // Guardar abonados en localStorage
    function saveAbonados(abonados) {
      localStorage.setItem('parkingAbonados', JSON.stringify(abonados));
    }

    // Obtener tarifas mensuales
    function getTarifasMensuales() {
      const tarifas = JSON.parse(localStorage.getItem('parkingTarifas') || '{}');
      return {
        carro: tarifas.carro?.mensual || 80000,
        moto: tarifas.moto?.mensual || 40000
      };
    }

    // Formatear moneda
    function formatCurrency(amount) {
      return new Intl.NumberFormat('es-CO', {
        style: 'currency',
        currency: 'COP',
        minimumFractionDigits: 0
      }).format(amount);
    }

    // Calcular fecha de vencimiento (30 d√≠as desde hoy)
    function calcularVencimiento() {
      const fecha = new Date();
      fecha.setDate(fecha.getDate() + 30);
      return fecha.toISOString().split('T')[0];
    }

    // Verificar si un abonado est√° vencido
    function isVencido(fechaVencimiento) {
      const hoy = new Date().toISOString().split('T')[0];
      return fechaVencimiento < hoy;
    }

    // Validar formulario
    function validateForm() {
      const placa = abonadoPlaca.value.trim();
      const tipo = abonadoTipo.value;
      const nombre = abonadoNombre.value.trim();
      addAbonadoBtn.disabled = !placa || !tipo || !nombre;
    }

    // Agregar nuevo abonado
    function addAbonado() {
      const placa = abonadoPlaca.value.trim().toUpperCase();
      const tipo = abonadoTipo.value;
      const nombre = abonadoNombre.value.trim();

      if (!placa || !tipo || !nombre) return;

      const abonados = getAbonados();
      
      // Verificar si ya existe
      const exists = abonados.some(a => a.placa.toLowerCase() === placa.toLowerCase());
      if (exists) {
        alert('Ya existe un abonado con esa placa');
        return;
      }

      const tarifasMensuales = getTarifasMensuales();
      const nuevoAbonado = {
        id: Date.now().toString(),
        placa: placa,
        tipo: tipo,
        nombre: nombre,
        fechaInicio: new Date().toISOString().split('T')[0],
        fechaVencimiento: calcularVencimiento(),
        tarifa: tarifasMensuales[tipo],
        activo: true
      };

      abonados.push(nuevoAbonado);
      saveAbonados(abonados);

      // Limpiar formulario
      abonadoPlaca.value = '';
      abonadoTipo.value = '';
      abonadoNombre.value = '';
      validateForm();

      renderAbonados();
      updateStats();
      
      alert(`Abonado ${nombre} registrado exitosamente`);
    }

    // Renovar abonado
    function renovarAbonado(id) {
      const abonados = getAbonados();
      const abonado = abonados.find(a => a.id === id);
      if (!abonado) return;

      abonado.fechaVencimiento = calcularVencimiento();
      abonado.activo = true;
      
      saveAbonados(abonados);
      renderAbonados();
      
      alert(`Mensualidad de ${abonado.nombre} renovada hasta ${abonado.fechaVencimiento}`);
    }

    // Eliminar abonado
    function eliminarAbonado(id) {
      if (!confirm('¬øEst√°s seguro de eliminar este abonado?')) return;
      
      const abonados = getAbonados();
      const filtered = abonados.filter(a => a.id !== id);
      
      saveAbonados(filtered);
      renderAbonados();
      updateStats();
    }

    // Renderizar lista de abonados
    function renderAbonados() {
      const abonados = getAbonados();
      
      if (abonados.length === 0) {
        abonadosList.innerHTML = `
          <div class="text-center py-8 text-gray-500">
            <svg class="h-12 w-12 mx-auto mb-2 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.196-2.121M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.196-2.121M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
            </svg>
            <p>No hay abonados registrados</p>
          </div>
        `;
        return;
      }

      abonadosList.innerHTML = abonados.map(abonado => {
        const vencido = isVencido(abonado.fechaVencimiento);
        const statusClass = vencido ? 'border-red-200 bg-red-50' : 'border-green-200 bg-green-50';
        const statusText = vencido ? 'Vencido' : 'Activo';
        const statusColor = vencido ? 'text-red-600' : 'text-green-600';

        return `
          <div class="flex items-center justify-between p-3 border rounded-lg ${statusClass}">
            <div class="flex items-center gap-3">
              ${abonado.tipo === 'carro' ? 
                '<svg class="h-5 w-5 text-blue-600" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M8 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM15 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM3 4a1 1 0 00-1 1v10a1 1 0 001 1h1.05a2.5 2.5 0 014.9 0H10a1 1 0 001-1V5a1 1 0 00-1-1H3zM14 7a1 1 0 00-1 1v8a1 1 0 001 1h1.05a2.5 2.5 0 014.9 0H17a1 1 0 001-1V8a1 1 0 00-1-1h-3z" clip-rule="evenodd"></path></svg>' :
                '<svg class="h-5 w-5 text-green-600" fill="currentColor" viewBox="0 0 20 20"><path d="M3 4a1 1 0 011-1h4a1 1 0 010 2H6.414l2.293 2.293a1 1 0 01-1.414 1.414L5 6.414V8a1 1 0 01-2 0V4zm9 1a1 1 0 010-2h4a1 1 0 011 1v4a1 1 0 01-2 0V6.414l-2.293 2.293a1 1 0 11-1.414-1.414L13.586 5H12zm-9 7a1 1 0 012 0v1.586l2.293-2.293a1 1 0 111.414 1.414L6.414 15H8a1 1 0 010 2H4a1 1 0 01-1-1v-4zm13-1a1 1 0 011 1v4a1 1 0 01-1 1h-4a1 1 0 010-2h1.586l-2.293-2.293a1 1 0 111.414-1.414L15 13.586V12a1 1 0 011-1z"></path></svg>'
              }
              <div>
                <p class="font-medium">${abonado.placa} - ${abonado.nombre}</p>
                <p class="text-sm text-gray-600">
                  Vence: ${abonado.fechaVencimiento} | ${formatCurrency(abonado.tarifa)}/mes
                </p>
              </div>
            </div>
            <div class="flex items-center gap-2">
              <span class="px-2 py-1 text-xs font-medium rounded-full ${statusColor} bg-current bg-opacity-10">
                ${statusText}
              </span>
              ${vencido ? 
                `<button onclick="renovarAbonado('${abonado.id}')" class="px-3 py-1 text-xs bg-blue-600 text-white rounded hover:bg-blue-700">Renovar</button>` :
                ''
              }
              <button onclick="eliminarAbonado('${abonado.id}')" class="px-3 py-1 text-xs bg-red-600 text-white rounded hover:bg-red-700">Eliminar</button>
            </div>
          </div>
        `;
      }).join('');
    }

    // Actualizar estad√≠sticas
    function updateStats() {
      const abonados = getAbonados();
      const carros = abonados.filter(a => a.tipo === 'carro').length;
      const motos = abonados.filter(a => a.tipo === 'moto').length;
      
      const tarifasMensuales = getTarifasMensuales();
      const ingresos = (carros * tarifasMensuales.carro) + (motos * tarifasMensuales.moto);

      abonadosCount.textContent = `${abonados.length} abonado${abonados.length !== 1 ? 's' : ''}`;
      abonadosCarros.textContent = carros;
      abonadosMotos.textContent = motos;
      ingresosMensuales.textContent = formatCurrency(ingresos);
    }

    // Event listeners
    [abonadoPlaca, abonadoTipo, abonadoNombre].forEach(input => {
      input.addEventListener('input', validateForm);
      input.addEventListener('change', validateForm);
    });

    abonadoPlaca.addEventListener('input', function(e) {
      e.target.value = e.target.value.toUpperCase();
    });

    addAbonadoBtn.addEventListener('click', addAbonado);

    // Funciones globales
    window.renovarAbonado = renovarAbonado;
    window.eliminarAbonado = eliminarAbonado;

    // Funci√≥n global para verificar si es abonado
    window.isAbonado = function(placa) {
      const abonados = getAbonados();
      const abonado = abonados.find(a => 
        a.placa.toLowerCase() === placa.toLowerCase() && 
        !isVencido(a.fechaVencimiento)
      );
      return abonado || null;
    };

    // Inicializar
    validateForm();
    renderAbonados();
    updateStats();
  });
</script>
