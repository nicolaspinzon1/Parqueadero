---
import Images from "../images/Logo_Parque.png"

export interface Props {
  titleImage?: string;
  userName?: string;
}

const {
  titleImage = "https://res.cloudinary.com/dlxf1d5ag/image/upload/v1748581231/Logo_Parque_km3m6x.png",
  userName = "Admin",
} = Astro.props;
---

<header class="bg-white shadow-sm border-b border-gray-200">
  <div class="flex items-center justify-between px-6 py-4">
    <div class="flex items-center">
      <!-- <img src={titleImage} alt="Logo" class="h-2 w-2 mr-3" /> -->
      <h2 class="text-2xl font-semibold text-gray-800">PARQUEADERO EL PIJAO</h2> 
    </div>
    <div class="flex items-center space-x-4">
      <!-- Registro Button -->

      <!-- User Menu -->
      <div class="relative">
        <div class="flex items-center space-x-2">
          <span class="text-sm font-medium text-gray-700">{userName}</span>
          <button
            id="userMenuButton"
            class="flex items-center space-x-1 text-sm text-gray-500 hover:text-gray-700 transition-colors"
            aria-expanded="false"
            aria-haspopup="true"
          >
            <svg
              class="w-4 h-4 transition-transform duration-200"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M19 9l-7 7-7-7"></path>
            </svg>
          </button>
        </div>

        <!-- Dropdown Menu -->
        <div
          id="userDropdown"
          class="absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 border border-gray-200 z-50 opacity-0 invisible transition-all duration-200 transform translate-y-1"
        >

        <a href="/" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors">
                        <div class="flex items-center">
                            <svg class="w-4 h-4 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"/>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                            </svg>
                             Inicio
                        </div>
                    </a> 
          <a
            href="/registro"
            class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors"
          >
          
            <div class="flex items-center">
              <svg
                class="w-4 h-4 mr-3"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                class="size-6"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M9 12h3.75M9 15h3.75M9 18h3.75m3 .75H18a2.25 2.25 0 0 0 2.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 0 0-1.123-.08m-5.801 0c-.065.21-.1.433-.1.664 0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75 2.25 2.25 0 0 0-.1-.664m-5.8 0A2.251 2.251 0 0 1 13.5 2.25H15c1.012 0 1.867.668 2.15 1.586m-5.8 0c-.376.023-.75.05-1.124.08C9.095 4.01 8.25 4.973 8.25 6.108V8.25m0 0H4.875c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V9.375c0-.621-.504-1.125-1.125-1.125H8.25ZM6.75 12h.008v.008H6.75V12Zm0 3h.008v.008H6.75V15Zm0 3h.008v.008H6.75V18Z"
                ></path>
              </svg>

              Registros
            </div>
          </a>
           <a href="/Abonados" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors">
                        <div class="flex items-center">
                            <svg class="w-4 h-4 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                               
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.196-2.121M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.196-2.121M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                            </svg>
                       
                            
      </svg>
  
</svg>

                            Abonar
                        </div>
                    </a> 
           <a href="/tarifas" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors">
                        <div class="flex items-center">
                            <svg class="w-4 h-4 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                               
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.25 18.75a60.07 60.07 0 0 1 15.797 2.101c.727.198 1.453-.342 1.453-1.096V18.75M3.75 4.5v.75A.75.75 0 0 1 3 6h-.75m0 0v-.375c0-.621.504-1.125 1.125-1.125H20.25M2.25 6v9m18-10.5v.75c0 .414.336.75.75.75h.75m-1.5-1.5h.375c.621 0 1.125.504 1.125 1.125v9.75c0 .621-.504 1.125-1.125 1.125h-.375m1.5-1.5H21a.75.75 0 0 0-.75.75v.75m0 0H3.75m0 0h-.375a1.125 1.125 0 0 1-1.125-1.125V15m1.5 1.5v-.75A.75.75 0 0 0 3 15h-.75M15 10.5a3 3 0 1 1-6 0 3 3 0 0 1 6 0Zm3 0h.008v.008H18V10.5Zm-12 0h.008v.008H6V10.5Z"/>
                            </svg>
                       
  
</svg>

                            Tarifas
                        </div>
                    </a> 

          <hr class="my-1 border-gray-200" />
          <button
            id="logoutButton"
            class="w-full text-left block px-4 py-2 text-sm text-red-600 hover:bg-red-50 transition-colors"
          >
            <div class="flex items-center">
              <svg
                class="w-4 h-4 mr-3"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"
                ></path>
              </svg>
              Cerrar Sesión
            </div>
          </button>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  // Funcionalidad del dropdown menu
  const userMenuButton = document.getElementById("userMenuButton");
  const userDropdown = document.getElementById("userDropdown");
  const logoutButton = document.getElementById("logoutButton");

  // Toggle del dropdown
  userMenuButton?.addEventListener("click", (e) => {
    e.stopPropagation();
    const isOpen = userDropdown?.classList.contains("opacity-100");

    if (isOpen) {
      closeDropdown();
    } else {
      openDropdown();
    }
  });

  // Funciones para abrir y cerrar el dropdown
  function openDropdown() {
    userDropdown?.classList.remove("opacity-0", "invisible", "translate-y-1");
    userDropdown?.classList.add("opacity-100", "visible", "translate-y-0");
    userMenuButton?.setAttribute("aria-expanded", "true");

    // Rotar la flecha
    const arrow = userMenuButton?.querySelector("svg");
    arrow?.classList.add("rotate-180");
  }

  function closeDropdown() {
    userDropdown?.classList.add("opacity-0", "invisible", "translate-y-1");
    userDropdown?.classList.remove("opacity-100", "visible", "translate-y-0");
    userMenuButton?.setAttribute("aria-expanded", "false");

    // Rotar la flecha
    const arrow = userMenuButton?.querySelector("svg");
    arrow?.classList.remove("rotate-180");
  }

  // Cerrar dropdown al hacer click fuera
  document.addEventListener("click", (e) => {
    if (
      !userMenuButton?.contains(e.target as Node) &&
      !userDropdown?.contains(e.target as Node)
    ) {
      closeDropdown();
    }
  });

  // Funcionalidad de cerrar sesión
  logoutButton?.addEventListener("click", async () => {
    // Mostrar confirmación
    const confirmed = confirm("¿Estás seguro de que quieres cerrar sesión?");

    if (confirmed) {
      try {
        // Opción 1: Si tienes una API endpoint para logout
        const response = await fetch("/api/logout", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
        });

        if (response.ok) {
          // Limpiar localStorage si lo usas
          localStorage.clear();
          sessionStorage.clear();

          // Redirigir a la página de login
          window.location.href = "/login";
        } else {
          throw new Error("Error al cerrar sesión");
        }
      } catch (error) {
        console.error("Error:", error);

        // Opción 2: Si no tienes API, simplemente limpiar y redirigir
        localStorage.clear();
        sessionStorage.clear();
        window.location.href = "/login";
      }
    }
  });

  // Cerrar dropdown con Escape
  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape") {
      closeDropdown();
    }
  });
</script>

<style>
  .rotate-180 {
    transform: rotate(180deg);
  }
</style>
