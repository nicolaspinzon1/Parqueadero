---
// src/components/dashboard/RecentActivity.astro
export interface ActivityItem {
  type: 'entry' | 'exit';
  licensePlate: string;
  timeAgo: string;
}

export interface Props {
  activities?: ActivityItem[];
}

const { activities = [] } = Astro.props;

const defaultActivities: ActivityItem[] = [
  { type: 'entry', licensePlate: 'ABC-123', timeAgo: 'Hace 5 minutos' },
  { type: 'exit', licensePlate: 'XYZ-789', timeAgo: 'Hace 12 minutos' },
  { type: 'entry', licensePlate: 'DEF-456', timeAgo: 'Hace 25 minutos' },
  { type: 'exit', licensePlate: 'JKL-012', timeAgo: 'Hace 45 minutos' },
];

const activityList = activities.length > 0 ? activities : defaultActivities;

const getActivityText = (activity: ActivityItem) => {
  return activity.type === 'entry' ? `Entrada ${activity.licensePlate}` : `Salida ${activity.licensePlate}`;
};

const getActivityColor = (activity: ActivityItem) => {
  return activity.type === 'entry' ? 'bg-green-400' : 'bg-red-400';
};
---

<div class="bg-white rounded-lg shadow">
    <div class="px-6 py-4 border-b border-gray-200">
        <h3 class="text-lg font-medium text-gray-900">Actividad Reciente</h3>
    </div>
    <div class="p-6">
        <div class="space-y-4">
            {activityList.map(activity => (
                <div class="flex items-center">
                    <div class={`w-2 h-2 ${getActivityColor(activity)} rounded-full mr-3`}></div>
                    <div class="flex-1">
                        <p class="text-sm font-medium text-gray-900">{getActivityText(activity)}</p>
                        <p class="text-xs text-gray-500">{activity.timeAgo}</p>
                    </div>
                </div>
            ))}
        </div>
    </div>
</div>